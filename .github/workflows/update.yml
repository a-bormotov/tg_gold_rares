name: Update user_gold.csv hourly

on:
  schedule:
    - cron: "0 * * * *"   # запуск каждый час (UTC)
  workflow_dispatch:       # возможность запустить вручную

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || pip install psycopg2-binary pandas

      # --- SSH-туннель (если USE_SSH == 'true') ---
      - name: Start SSH tunnel (if USE_SSH == true)
        if: ${{ secrets.USE_SSH == 'true' }}
        env:
          SSH_KEY:  ${{ secrets.SSH1_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH1_HOST }}
          SSH_PORT: ${{ secrets.SSH1_PORT }}
          SSH_USER: ${{ secrets.SSH1_USER }}
          DB_HOST:  ${{ secrets.DB1_HOST }}
          DB_PORT:  ${{ secrets.DB1_PORT }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p "${SSH_PORT}" "${SSH_HOST}" >> ~/.ssh/known_hosts 2>/dev/null || true

          echo "→ Forwarding 5433 -> ${DB_HOST}:${DB_PORT} via ${SSH_USER}@${SSH_HOST}:${SSH_PORT}"
          ssh -o StrictHostKeyChecking=yes -i ~/.ssh/id_rsa -N -f \
            -L 5433:${DB_HOST}:${DB_PORT} \
            ${SSH_USER}@${SSH_HOST} -p ${SSH_PORT}

          for i in {1..30}; do
            (echo > /dev/tcp/127.0.0.1/5433) >/dev/null 2>&1 && { echo "✓ Tunnel is up"; exit 0; }
            sleep 0.5
          done
          echo "✗ Tunnel failed to start" >&2
          exit 1

      - name: Run run_query.py
        env:
          DB_USER:     ${{ secrets.DB1_USER }}
          DB_PASSWORD: ${{ secrets.DB1_PASSWORD }}
          DB_NAME:     ${{ secrets.DB1_NAME }}
          DB_HOST:     ${{ secrets.DB1_HOST }}
          DB_PORT:     ${{ secrets.DB1_PORT }}
          USE_SSH:     ${{ secrets.USE_SSH }}
        run: |
          if [ "${USE_SSH}" = "true" ]; then
            export DB_URL="postgresql://${DB_USER}:${DB_PASSWORD}@127.0.0.1:5433/${DB_NAME}"
            echo "→ Using SSH tunnel URL"
          else
            export DB_URL="postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"
            echo "→ Using direct DB URL"
          fi

          python run_query.py   # скрипт сохранит user_gold.csv в корень

      - name: Commit & push if changed
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add user_gold.csv || true
          git diff --cached --quiet || git commit -m "update user_gold.csv"
          git push
