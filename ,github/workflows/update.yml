name: Update CSV hourly

on:
  # - включишь планировщик когда захочешь
  #schedule:
  #  - cron: '0 * * * *'     # каждый час (UTC)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      USE_SSH: ${{ secrets.USE_SSH }}  # 'true' или 'false'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # опционально: держим CNAME из Repo Variables (Settings → Variables → CUSTOM_DOMAIN)
      - name: Ensure CNAME (optional)
        if: ${{ vars.CUSTOM_DOMAIN != '' }}
        run: echo "${{ vars.CUSTOM_DOMAIN }}" > CNAME

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || pip install psycopg2-binary pandas

      # --- SSH-туннель (включится, если USE_SSH == 'true') ---
      - name: Start SSH tunnel (if needed)
        if: ${{ env.USE_SSH == 'true' }}
        env:
          SSH_KEY:           ${{ secrets.SSH_PRIVATE_KEY }}   # ключ в формате OpenSSH
          SSH_HOST:          ${{ secrets.SSH_HOST }}
          SSH_PORT:          ${{ secrets.SSH_PORT }}
          SSH_USER:          ${{ secrets.SSH_USER }}
          DB_INTERNAL_HOST:  ${{ secrets.DB_HOST }}           # как БД видна с бастиона
          DB_INTERNAL_PORT:  ${{ secrets.DB_PORT }}           # обычно 5432
        run: |
          echo "$SSH_KEY" > id_rsa
          chmod 600 id_rsa
          nohup ssh -o StrictHostKeyChecking=no -i id_rsa -N \
            -L 5433:${DB_INTERNAL_HOST}:${DB_INTERNAL_PORT} \
            ${SSH_USER}@${SSH_HOST} -p ${SSH_PORT} &
          # чуть подождём, чтобы порт поднялся
          for i in {1..20}; do nc -z 127.0.0.1 5433 && break; sleep 0.5; done

      - name: Run run_query.py
        env:
          # прямое подключение (если USE_SSH != 'true')
          DB_URL_DIRECT: postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
          # через туннель (если USE_SSH == 'true')
          DB_URL_TUNNEL: postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@127.0.0.1:5433/${{ secrets.DB_NAME }}
          USE_SSH: ${{ env.USE_SSH }}
        run: |
          if [ "${USE_SSH}" = "true" ]; then
            export DB_URL="$DB_URL_TUNNEL"
          else
            export DB_URL="$DB_URL_DIRECT"
          fi
          python run_query.py

      - name: Commit & push if changed
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add user_gold.csv CNAME || true
          git diff --cached --quiet || git commit -m "update user_gold.csv"
          git push
